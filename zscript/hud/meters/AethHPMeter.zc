class AethHPMeter : AethHUDMeter {
	Actor Subject;
	
	override void Init(GUIWidget parent) {
		Super.Init(parent);
		
		LengthBase = Screen.GetWidth() / 2.;
		LengthScale = 2;
		LabelText.Text = "HP";
		
		MainFill.Colors.Resize(FillColorsNum);
		for (let i = 0; i < FillColorsNum; i++)
			MainFill.Colors[i] = FillColors[i];
		
		OverFill.Colors.Resize(OverfillColorsNum);
		for (let i = 0; i < OverfillColorsNum; i++)
			OverFill.Colors[i] = OverfillColors[i];
	}
	
	/* Computed by this Scala code:
	 *
	 * import scala.math._
	 *
	 * val ticRate = 35
	 * val halfTicRate = ticRate / 2.0
	 * val pulseMin = 0.495
	 * val pulseMax = 0.75
	 * val pulseDelta = pulseMax - pulseMin
	 *
	 * for (x <- 0 until ticRate)
	 * yield (pulseMin + abs((x / halfTicRate) - 1) * pulseDelta).toFloat
	 */
	static const float PULSE_LUT[] = {
		0.75, 0.7354286, 0.72085714, 0.7062857, 0.6917143, 0.67714286, 0.66257143, 0.648, 0.6334286, 0.61885715, 0.6042857, 0.5897143, 0.57514286, 0.56057143, 0.546, 0.5314286, 0.51685715, 0.5022857, 0.5022857, 0.51685715, 0.5314286, 0.546, 0.56057143, 0.57514286, 0.5897143, 0.6042857, 0.61885715, 0.6334286, 0.648, 0.66257143, 0.67714286, 0.6917143, 0.7062857, 0.72085714, 0.7354286
	};
	
	override void Tick() {
		Value = Subject.Health;
		
		MaxValue =
			Subject is "PlayerPawn"?
			PlayerPawn(Subject).GetMaxHealth(true) :
			Subject.SpawnHealth();
		
		FrameGlowOpacity =
			Value * 10 <= MaxValue?
			PULSE_LUT[gametic % Thinker.TICRATE] :
			0;
		
		Super.Tick();
	}
	
	static const Color FillColors[] = {
		0xFF540000, 0xFF690000, 0xFF850000, 0xFFA20000, 0xFFC40000,
		0xFFE90000, 0xFFFF0203, 0xFFFF1011, 0xFFFF1D20, 0xFFFF2F32,
		0xFFFF3B3D, 0xFFFF4749, 0xFFFF5254, 0xFFFF6063, 0xFFFF6C70,
		0xFFFF7D80, 0xFFFF9194, 0xFFFFA5A7, 0xFFFFC1C1, 0xFFFFDCDC
	};
	const FillColorsNum = 20;
	
	static const Color OverfillColors[] = {
		0xFFFFF9F9, 0xFFFFF3F3, 0xFFFFEDED, 0xFFFFE8E9, 0xFFFFE2E4,
		0xFFFFDDDE, 0xFFFFD9DA, 0xFFFFD3D4, 0xFFFFCECF, 0xFFFFC8C9,
		0xFFFFC0C2, 0xFFFFB2B4, 0xFFFFA0A3, 0xFFFF727A, 0xFFFB0000,
		0xFFF40000, 0xFFEC0000, 0xFFE50000, 0xFFDC0000, 0xFFD40000
	};
	const OverfillColorsNum = 20;
}
