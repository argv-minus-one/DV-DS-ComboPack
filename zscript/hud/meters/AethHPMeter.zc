class AethHPMeter : AethHUDMeter {
	Actor Subject;
	
	override void Init(GUIWidget parent) {
		Super.Init(parent);
		
		LengthBase = Screen.GetWidth() / 2.;
		LengthScale = 2;
		LabelText.Text = "HP";
		MainFill.Texture = TexMan.CheckForTexture("HPBFILN", TexMan.Type_Any);
		OverFill.Texture = TexMan.CheckForTexture("HPBFILO", TexMan.Type_Any);
	}
	
	/* Computed by this Scala code:
	 *
	 * import scala.math._
	 *
	 * val ticRate = 35
	 * val halfTicRate = ticRate / 2.0
	 * val pulseMin = 0.495
	 * val pulseMax = 0.75
	 * val pulseDelta = pulseMax - pulseMin
	 *
	 * for (x <- 0 until ticRate)
	 * yield (pulseMin + abs((x / halfTicRate) - 1) * pulseDelta).toFloat
	 */
	static const float PULSE_LUT[] = {
		0.75, 0.7354286, 0.72085714, 0.7062857, 0.6917143, 0.67714286, 0.66257143, 0.648, 0.6334286, 0.61885715, 0.6042857, 0.5897143, 0.57514286, 0.56057143, 0.546, 0.5314286, 0.51685715, 0.5022857, 0.5022857, 0.51685715, 0.5314286, 0.546, 0.56057143, 0.57514286, 0.5897143, 0.6042857, 0.61885715, 0.6334286, 0.648, 0.66257143, 0.67714286, 0.6917143, 0.7062857, 0.72085714, 0.7354286
	};
	
	override void Tick() {
		Value = Subject.Health;
		
		MaxValue =
			Subject is "PlayerPawn"?
			PlayerPawn(Subject).GetMaxHealth(true) :
			Subject.SpawnHealth();
		
		FrameGlowOpacity =
			Value * 10 <= MaxValue?
			PULSE_LUT[gametic % Thinker.TICRATE] :
			0;
		
		Super.Tick();
	}
}
