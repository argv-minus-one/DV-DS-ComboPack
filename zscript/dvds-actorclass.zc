// Base class [for later use]
class AetheriusBaseZSC : Actor
{
	float user_tempvar1, user_tempvar2, user_tempvar3, user_tempvar4, user_tempvar5;
	int user_hyperlvl1, user_hyperlvl2;
	int user_theta, user_dormant, user_isstealth, user_baseattack, user_basedefense, user_basemass; 
	int user_monsterlevel, user_extraevolvechance, user_extrastealthchance;
	int user_willbecomelegendary, user_legendaryevolved;
	int user_MaxHP, user_HPCritRange, user_HPBuffRange, user_HPXDeathRange, user_HPXDeathRange2, user_HPLowRange;
	int user_checkmapskill, user_ressurrectstr, user_resurrectedtimes, user_canusecrisisatk;
	int user_presetleveladd, user_presetlevelrand1, user_presetlevelrand2;
	int user_barragecounter, user_shotsfired, user_shotsfiredmax;
	float user_shotaccuracy, user_shotaccuracy1, user_shotaccuracy2; 
	float user_shotzaccuracy, user_shotzaccuracy1, user_shotzaccuracy2; 
	float user_randominaccuracy, user_randominaccuracy2;
	float user_basespeed;
	int user_pelletsfired, user_currenttracer, user_aimangleorigin; 
	int user_ammotype, user_gravitytype, user_shotangle, user_chargeinterval, user_pulseinterval;
	int user_spread, user_spread1, user_spread2;
	int user_attacktype, user_attacks, user_attackmax, user_fastchasechance, user_fastchaseextra, user_painfastchase;
	int user_paintomissile;
	int user_painreacttimer;
	int user_fastchasetimer, user_fastchasetimermax;
	int user_walksound;

	int user_nolegendarytrans;
	int user_golddrop;
	int user_crisisprojectile;
	int user_defendtimer, user_defendtimermax, user_defendcycles;
	int user_autorestimer;
	int user_firevolleys, user_firevolleymax;
	int user_random, user_random1, user_ailment1, user_ailmentmaxchance, user_attackpoint;
	int user_chargechance; 
	int user_charmchance, user_charmed;
	int user_summoned;
	int user_regencycles, user_regencyclemax;
}

class AetheriusCustomInventory : CustomInventory
{
	int allowexperiessence, gfxeffectlevel;
	int animationtimer, heartbeattimer;
	int skilllevel;
	int frametimer;
}

// Keeps Sounds/Music active during time Freeze powerups
class AetheriusTimeFreezer : PowerTimeFreezer
{
	override void InitEffect()
	{
		Super.InitEffect();
		S_ResumeSound(false);
	}
	
	override void Tick()
	{
		Super.Tick();
		S_ResumeSound(false);
	}
}

class ShieldSpawnerBase : AetheriusBaseZSC
{
	default
	{
		Radius 1;
		Height 1;
		+NOGRAVITY
		+NOINTERACTION
		+NOTIMEFREEZE
		+NOTELESTOMP
	}
}
