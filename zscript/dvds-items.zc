class BaseExperiessence : AetheriusCustomInventory
{
	int user_transpulsetype;
	int ActorVar1;
	
	void A_PickupExperiessence(double percentage = 1.0)
	{
		int CharacterClass = CallACS("CheckCharacterClass");
		int PlayerLevel = CallACS("StatCheck",0);
		int ClearedOfMindParkLevel = CallACS("MiscVarCheckDECORATE",10055);
		int ClearedOfMindEXParkLevel = CallACS("MiscVarCheckDECORATE",10056);
		
		if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("percentage: %8f", percentage);
		double BaseEXPGain = percentage;
		double perkfactor;
		if (random(1,64) == 1) BaseEXPGain *= 2.0;
		if (random(1,256) == 1) BaseEXPGain *= 2.0;
		if (random(1,1024) == 1) BaseEXPGain *= 2.0;
		
		int EXPGiven;
		
		if (PlayerLevel == 0) { EXPGiven = (CallACS("ExpTableCheckDECORATE",PlayerLevel) * BaseEXPGain) / 100; }
		else if (PlayerLevel >= 1) { EXPGiven = ((CallACS("ExpTableCheckDECORATE",PlayerLevel) - CallACS("ExpTableCheckDECORATE",(PlayerLevel-1))) * BaseEXPGain) / 100; }
		if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("Experiessence: %d [Base]", EXPGiven);
		
		if (ClearedOfMindParkLevel > 0)
		{
			perkfactor = 1.00;
			if (ClearedOfMindParkLevel >= 1) perkfactor += 0.04;
			if (ClearedOfMindParkLevel >= 2) perkfactor += 0.05;
			if (ClearedOfMindParkLevel >= 3) perkfactor += 0.06;
			if (ClearedOfMindParkLevel >= 4) perkfactor += 0.07;
			if (ClearedOfMindParkLevel >= 5) perkfactor += 0.08;
			if (ClearedOfMindEXParkLevel >= 1) perkfactor += 0.10;
			if (ClearedOfMindEXParkLevel >= 2) perkfactor += 0.20;
			EXPGiven *= perkfactor;
			if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("Experiessence: %d [Perks1], PerkFactor: %8f", EXPGiven, perkfactor);
		}
		if (CallACS("MiscVarCheckDECORATE",11001) > 0)
		{
			if (CallACS("MiscVarCheckDECORATE",11001) == 1)
			{
				if (CharacterClass == 0 | CharacterClass == 1) EXPGiven *= 1.225; // EXP Multiplier Option [122.5%]
				if (CharacterClass == 2) EXPGiven *= 1.15; // EXP Multiplier Option [115%]
			}
			if (CallACS("MiscVarCheckDECORATE",11001) == 2)
			{
				if (CharacterClass == 0 | CharacterClass == 1) EXPGiven *= 1.45; // EXP Multiplier Option [145%]
				if (CharacterClass == 2) EXPGiven *= 1.3; // EXP Multiplier Option [130%]
			}
			if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("Experiessence: %d [Perks2]", EXPGiven);
		}
	
		int ExpMultiplier = dvds_expmultiplier;
		int basemulti;
		if (EXPGiven > 0)
		{
			basemulti = random(25,35) * 25;
			EXPGiven = (EXPGiven * basemulti) / 1000;
			if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("Experiessence: %d [Factor1], BaseMult: %d / 1000", EXPGiven, basemulti);
	
			EXPGiven = (EXPGiven * ExpMultiplier) / 100;
			if (dvdsdebug_showexpdebugstuff == 1) Console.Printf("Experiessence: %d [ExpMulti], ExpMultiplier: %d / 100", EXPGiven, ExpMultiplier);

			CallACS("ExpCheat",ExpGiven); // Experience += EXPGiven;
		}
	}
}

class BaseSeed : AetheriusCustomInventory
{
	void A_GrabSeedOther(int SeedType, int SeedAmount, int SeedLimitTypeIncrease)
	{
		int ModType = CallACS("OtherVarCheckDECORATE",8);

		int SkillSeedRuns, MaxSkillSeedRuns, SkillSeedRND, OldAGL, NewAGL, OldDEF, NewDEF, OldDFT, NewDFT, OldSOR, NewSOR, OldSTR, NewSTR, OldTHE, NewTHE, OldAeonPts, NewAeonPts;
		int SeedMulti;
		
		if (ModType == 0 && dvds_canseedsappear == 0) { }
		else
		{
			if (SeedAmount < 1) SeedAmount = 1;
			
			// "0" is for non-dropped or map-placed seeds as to not impose a limit on those
			if (SeedLimitTypeIncrease == 1) CallACS("MiscVarSetDECORATE",30,1,1); // "1" is Normal Seeds
			if (SeedLimitTypeIncrease == 2) CallACS("MiscVarSetDECORATE",37,1,1); // "2" is Skill Seeds
			if (SeedLimitTypeIncrease == 3) CallACS("MiscVarSetDECORATE",27,1,1); // "3" is Fyggs
			
			if (SeedType < 0) SeedAmount = 0;
			if (SeedType > 7) SeedAmount = 0;
			
			OldAeonPts = CallACS("MiscVarCheckDECORATE",25);
			OldAGL = CallACS("MiscVarCheckDECORATE",31);
			OldDEF = CallACS("MiscVarCheckDECORATE",32);
			OldDFT = CallACS("MiscVarCheckDECORATE",33);
			OldSOR = CallACS("MiscVarCheckDECORATE",34);
			OldSTR = CallACS("MiscVarCheckDECORATE",35);
			OldTHE = CallACS("MiscVarCheckDECORATE",36);
			
			SeedMulti = 1;
			if (random(1,25) == 25) { if (random(1,625) == 625) SeedMulti = 3; else SeedMulti = 2; }
			
			if (SeedType == 0) // Seed of Skill [special seed, 4+ AeonPts ]
			{
				SeedAmount = 4;
				SeedAmount *= CallACS("MiscVarCheckDECORATE",87);
				SeedAmount *= CallACS("MiscVarCheckDECORATE",86);
				CallACS("MiscVarSetDECORATE",25,SeedAmount,1);
			}
			
			if (SeedType == 1) // Seed of Agility [Speed/Movement]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",31) < 512) CallACS("MiscVarSetDECORATE",31,SeedAmount,1);
			}
			
			if (SeedType == 2) // Seed of Defense [Overall Resistance]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",32) < 512) CallACS("MiscVarSetDECORATE",32,SeedAmount,1);
			}
			
			if (SeedType == 3) // Seed of Deftness [EXP Gain %]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",33) < 512) CallACS("MiscVarSetDECORATE",33,SeedAmount,1);
			}
			
			if (SeedType == 4) // Seed of Sorcery [Magical Attack]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",34) < 512) CallACS("MiscVarSetDECORATE",34,SeedAmount,1);
			}
			
			if (SeedType == 5) // Seed of Strength [Overall Attack]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",35) < 512) CallACS("MiscVarSetDECORATE",35,SeedAmount,1);
			}
			
			if (SeedType == 6) // Seed of Therapeusis [Magical Resistance]
			{
				SeedAmount = SeedAmount * SeedMulti * CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",36) < 512) CallACS("MiscVarSetDECORATE",36,SeedAmount,1);
			}
			
			if (SeedType == 7) // Fygg (extremely rare) [all stats +16]
			{
				SeedAmount = 16;
				SeedAmount *= CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",31) < 512) CallACS("MiscVarSetDECORATE",31,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",32) < 512) CallACS("MiscVarSetDECORATE",32,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",33) < 512) CallACS("MiscVarSetDECORATE",33,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",34) < 512) CallACS("MiscVarSetDECORATE",34,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",35) < 512) CallACS("MiscVarSetDECORATE",35,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",36) < 512) CallACS("MiscVarSetDECORATE",36,SeedAmount,1);
			}
			
			if (SeedType == 8) // Platinum Fygg (extremely rare) [+16 to all stats & +64 Aeon Points]
			{
				SeedAmount = 64;
				SeedAmount *= CallACS("MiscVarCheckDECORATE",87);
				SeedAmount *= CallACS("MiscVarCheckDECORATE",86);
				CallACS("MiscVarSetDECORATE",25,SeedAmount,1);
			
				SeedAmount = 16;
				SeedAmount *= CallACS("MiscVarCheckDECORATE",87);
				if (CallACS("MiscVarCheckDECORATE",31) < 512) CallACS("MiscVarSetDECORATE",31,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",32) < 512) CallACS("MiscVarSetDECORATE",32,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",33) < 512) CallACS("MiscVarSetDECORATE",33,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",34) < 512) CallACS("MiscVarSetDECORATE",34,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",35) < 512) CallACS("MiscVarSetDECORATE",35,SeedAmount,1);
				if (CallACS("MiscVarCheckDECORATE",36) < 512) CallACS("MiscVarSetDECORATE",36,SeedAmount,1);
			}
			
			if (SeedType == 9) // Enhanced Seed of Skill [special seed, 16+ AeonPts ]
			{
				SeedAmount = 16;
				SeedAmount *= CallACS("MiscVarCheckDECORATE",87);
				SeedAmount *= CallACS("MiscVarCheckDECORATE",86);
				CallACS("MiscVarSetDECORATE",25,SeedAmount,1);
			}
			
			if (CallACS("MiscVarCheckDECORATE",31) > 512) CallACS("MiscVarSetDECORATE",31,512);
			if (CallACS("MiscVarCheckDECORATE",32) > 512) CallACS("MiscVarSetDECORATE",32,512);
			if (CallACS("MiscVarCheckDECORATE",33) > 512) CallACS("MiscVarSetDECORATE",33,512);
			if (CallACS("MiscVarCheckDECORATE",34) > 512) CallACS("MiscVarSetDECORATE",34,512);
			if (CallACS("MiscVarCheckDECORATE",35) > 512) CallACS("MiscVarSetDECORATE",35,512);
			if (CallACS("MiscVarCheckDECORATE",36) > 512) CallACS("MiscVarSetDECORATE",36,512);
			NewAeonPts = CallACS("MiscVarCheckDECORATE",25);
			NewAGL = CallACS("MiscVarCheckDECORATE",31);
			NewDEF = CallACS("MiscVarCheckDECORATE",32);
			NewDFT = CallACS("MiscVarCheckDECORATE",33);
			NewSOR = CallACS("MiscVarCheckDECORATE",34);
			NewSTR = CallACS("MiscVarCheckDECORATE",35);
			NewTHE = CallACS("MiscVarCheckDECORATE",36);
			
			if (NewAeonPts-OldAeonPts > 0)
			{
				CallACS("MiscVarSetDECORATE",224,(NewAeonPts-OldAeonPts),1); 
				CallACS("MiscVarSetDECORATE",2033,105); 
			}
			if (NewAGL-OldAGL > 0)
			{
				CallACS("MiscVarSetDECORATE",225,(NewAGL-OldAGL),1); 
				CallACS("MiscVarSetDECORATE",2034,105); 
			}
			if (NewDEF-OldDEF > 0)
			{
				CallACS("MiscVarSetDECORATE",226,(NewDEF-OldDEF),1); 
				CallACS("MiscVarSetDECORATE",2035,105); 
			}
			if (NewDFT-OldDFT > 0)
			{
				CallACS("MiscVarSetDECORATE",227,(NewDFT-OldDFT),1); 
				CallACS("MiscVarSetDECORATE",2036,105); 
			}
			if (NewSOR-OldSOR > 0)
			{
				CallACS("MiscVarSetDECORATE",228,(NewSOR-OldSOR),1); 
				CallACS("MiscVarSetDECORATE",2037,105); 
			}
			if (NewSTR-OldSTR > 0)
			{
				CallACS("MiscVarSetDECORATE",229,(NewSTR-OldSTR),1); 
				CallACS("MiscVarSetDECORATE",2038,105); 
			}
			if (NewTHE-OldTHE > 0)
			{
				CallACS("MiscVarSetDECORATE",230,(NewTHE-OldTHE),1); 
				CallACS("MiscVarSetDECORATE",2039,105); 
			}
			
			if (SeedType == 0) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Skill!\n\n\cjAeonPts: %d --> %d", OldAeonPts, NewAeonPts));
			}
			
			if (SeedType == 1) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Agility!\n\n\cjAgility: %d --> %d", OldAGL, NewAGL));
			}
			
			if (SeedType == 2) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Defense!\n\n\cjDefense: %d --> %d", OldDEF, NewDEF));
			}
			
			if (SeedType == 3) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Deftness!\n\n\cjDeftness: %d --> %d", OldDFT, NewDFT));
			}
			
			if (SeedType == 4) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Sorcery!\n\n\cjSorcery: %d --> %d", OldSOR, NewSOR));
			}
			
			if (SeedType == 5) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Strength!\n\n\cjStrength: %d --> %d", OldSTR, NewSTR));
			}
			
			if (SeedType == 6) 
			{
				A_PrintBold(String.Format("\cjYou've Ate a Seed of Therapeusis!\n\n\cjTherapeusis: %d --> %d", OldTHE, NewTHE));
			}
			
			if (SeedType == 7) 
			{
				A_PrintBold(String.Format("\cjZOMG You've Ate a Fygg!!!!\n\n\cjAgility: %d --> %d\n\cjDefense: %d --> %d\n\cjDeftness: %d --> %d\n\cjSorcery: %d --> %d\n\cjStrength: %d --> %d\n\cjTherapeusis: %d --> %d", OldAGL, NewAGL, OldDEF, NewDEF, OldDFT, NewDFT, OldSOR, NewSOR, OldSTR, NewSTR, OldTHE, NewTHE));
			}
			
			if (SeedType == 8) 
			{
				A_PrintBold(String.Format("\cjZOMG You've Ate a PLATNIUM Fygg!!!!\n\n\cjAeonPts: %d --> %d\n\cjAgility: %d --> %d\n\cjDefense: %d --> %d\n\cjDeftness: %d --> %d\n\cjSorcery: %d --> %d\n\cjStrength: %d --> %d\n\cjTherapeusis: %d --> %d", OldAeonPts, NewAeonPts, OldAGL, NewAGL, OldDEF, NewDEF, OldDFT, NewDFT, OldSOR, NewSOR, OldSTR, NewSTR, OldTHE, NewTHE));
			}
			
			if (SeedType == 9) 
			{
				A_PrintBold(String.Format("\cjYou've Ate an Enhanced Seed of Skill!\n\n\cjAeonPts: %d --> %d", OldAeonPts, NewAeonPts));
			}
		}
	}
	
	void A_GrabLifeManaSeed(int SeedType, int SeedAmount, int SeedLimitTypeIncrease)
	{
		int CharacterClass = CallACS("CheckCharacterClass");
		int ModType = CallACS("OtherVarCheckDECORATE",8);
		int MaxHealthTrue = CallACS("StatCheck",1);
		int MaxMana = CallACS("StatCheck",2);
		int CurrentMana = CallACS("StatCheck",14);
		int debugseedstuff = dvdsdebug_showseedstuff;
		
		int SkillSeedRuns, SkillSeedRND, OldHP, NewHP, OldMP, NewMP, StatGain1, StatGain2, ArmorHPBonus, PerkFactor;
		
		if (ModType == 0 && dvds_canseedsappear == 0) { }
		else
		{
			if (SeedAmount < 1) SeedAmount = 1;
			
			if (SeedType < 1) SeedAmount = 1;
			if (SeedType > 2) SeedAmount = 2;
			
			OldHP = MaxHealthTrue;
			OldMP = MaxMana;
			
			if (SeedType == 1) // Seed of Life
			{
				StatGain1 = MaxHealthTrue / 80;
				if (CharacterClass == 0) StatGain1 += 3;
				if (CharacterClass == 1) StatGain1 += 2;
				if (CharacterClass == 2) StatGain1 += 1;
				if (CharacterClass == 8) StatGain1 += 1;
				if (CharacterClass == 9) StatGain1 += 3;
				if (debugseedstuff > 0) Console.Printf("StatGain1 [Base]: %d", StatGain1);
			
				SkillSeedRND = random(1,13);
			
				if (SkillSeedRND == 1) StatGain1 = StatGain1 * 1;
				if (SkillSeedRND >= 2 && SkillSeedRND <= 4) StatGain1 = StatGain1 * 3 / 2;
				if (SkillSeedRND >= 5 && SkillSeedRND <= 9) StatGain1 = StatGain1 * 2;
				if (SkillSeedRND >= 10 && SkillSeedRND <= 12) StatGain1 = StatGain1 * 5 / 2;
				if (SkillSeedRND == 13) StatGain1 = StatGain1 * 3;
				if (debugseedstuff > 0) Console.Printf("StatGain1 [Randomizer1]: %d", StatGain1);
			
				StatGain1 *= SeedAmount;
				StatGain1 *= CallACS("MiscVarCheckDECORATE",87);
				if (debugseedstuff > 0) Console.Printf("StatGain1 [Multipliers]: %d", StatGain1);
			
				// Flora's Armor Items [up to +45% Max HP gained from Max HP Bonuses]
				if (CharacterClass == 2)
				{
					if (player.mo.CountInv("PearlyCorset")) ArmorHPBonus += 20; // +20%
					if (player.mo.CountInv("KissaBra")) ArmorHPBonus += 10; // +10%
					if (player.mo.CountInv("BalrogRing")) ArmorHPBonus += 15; // +15%
					ArmorHPBonus += 100;
					if (debugseedstuff > 0) Console.Printf("ArmorHPBonus: %d", ArmorHPBonus);
					StatGain1 = StatGain1 * ArmorHPBonus / 100; // Flora is the only one who can use the Pearly Corset
					if (debugseedstuff > 0) Console.Printf("StatGain1 [ArmorHPBonus]: %d", StatGain1);
				}
			
				PerkFactor = ((CallACS("MiscVarCheckDECORATE",10001) * 500) + (CallACS("MiscVarCheckDECORATE",10002) * 1250)) + 10000;
				StatGain1 = StatGain1 * PerkFactor / 10000; // "LifeUp" and "LifeUp EX" perks.
				if (debugseedstuff > 0) Console.Printf("StatGain1 [LifeUp Perks]: %d", StatGain1);
			
				PerkFactor = (CallACS("MiscVarCheckDECORATE",317) * 1250) + 10000;
				StatGain1 = StatGain1 * PerkFactor / 10000; // [STRIFE-Compatibility] Times "Stamina Upgraded"
				if (debugseedstuff > 0) Console.Printf("StatGain1 [Stamina Upgrade (Strife)]: %d", StatGain1);
			
				if (StatGain1 < 1) StatGain1 = 1;
				CallACS("MiscVarSetDECORATE",222,StatGain1,1);
				CallACS("MiscVarSetDECORATE",2031,105); 
			
				player.mo.health += StatGain1;
				MaxHealthTrue += StatGain1;
				CallACS("OtherVarSetDECORATE",0,MaxHealthTrue);
			}
			
			if (SeedType == 2) // Seed of Magic
			{
				StatGain1 = MaxMana / 80;
				if (CharacterClass == 0) StatGain1 += 1;
				if (CharacterClass == 1) StatGain1 += 2;
				if (CharacterClass == 2) StatGain1 += 4;
				if (CharacterClass == 8) StatGain1 += 4;
				if (CharacterClass == 9) StatGain1 += 2;
				if (debugseedstuff > 0) Console.Printf("StatGain1 [Base]: %d", StatGain1);
			
				SkillSeedRND = random(1,13);
			
				if (SkillSeedRND == 1) StatGain1 = StatGain1 * 1;
				if (SkillSeedRND >= 2 && SkillSeedRND <= 4) StatGain1 = StatGain1 * 3 / 2;
				if (SkillSeedRND >= 5 && SkillSeedRND <= 9) StatGain1 = StatGain1 * 2;
				if (SkillSeedRND >= 10 && SkillSeedRND <= 12) StatGain1 = StatGain1 * 5 / 2;
				if (SkillSeedRND == 13) StatGain1 = StatGain1 * 3;
				if (debugseedstuff > 0) Console.Printf("StatGain1 [Randomizer1]: %d", StatGain1);
			
				StatGain1 *= SeedAmount;
				StatGain1 *= CallACS("MiscVarCheckDECORATE",87);
				if (debugseedstuff > 0) Console.Printf("StatGain1 [Multipliers]: %d", StatGain1);
			
				PerkFactor = ((CallACS("MiscVarCheckDECORATE",10003) * 500) + (CallACS("MiscVarCheckDECORATE",10004) * 1250)) + 10000;
				StatGain1 = StatGain1 * PerkFactor / 10000; // "MagiUp" and "MagiUp EX" perks.
				if (debugseedstuff > 0) Console.Printf("StatGain1 [LifeUp Perks]: %d", StatGain1);
			
				PerkFactor = (CallACS("MiscVarCheckDECORATE",317) * 1250) + 10000;
				StatGain1 = StatGain1 * PerkFactor / 10000; // [STRIFE-Compatibility] Times "Stamina Upgraded"
				if (debugseedstuff > 0) Console.Printf("StatGain1 [Stamina Upgrade (Strife)]: %d", StatGain1);
			
				if (StatGain1 < 1) StatGain1 = 1;
				CallACS("MiscVarSetDECORATE",223,StatGain1,1);
				CallACS("MiscVarSetDECORATE",2032,105); 
			
				MaxMana += StatGain1;
				CurrentMana += StatGain1;
				CallACS("OtherVarSetDECORATE",1,MaxMana);
				CallACS("OtherVarSetDECORATE",2,CurrentMana);
			}
			
			NewHP = MaxHealthTrue;
			NewMP = MaxMana;
			
			if (SeedType == 1) 
			{
				A_PrintBold(String.Format("\cjYou've Found a Seed of Life!\n\n\cjHP/Health: %d --> %d", OldHP, NewHP));
			}
			
			if (SeedType == 2) 
			{
				A_PrintBold(String.Format("\cjYou've Found a Seed of Magic!\n\n\cjMP/Mana: %d --> %d", OldMP, NewMP));
			}
		}
	}
}

class AetheriusPowerMask : PowerIronFeet
{
	Default
	{
		Powerup.Duration -80;
		Powerup.Color "00 00 00", 0;
		+INVENTORY.HUBPOWER
		Inventory.Icon "";
	}
	
	override void AbsorbDamage (int damage, Name damageType, out int newdamage)
	{
		if (damageType == 'Magma') newdamage = damage * 0.05;
		if (damageType == 'Slime' || damageType == 'Drowning') newdamage = 0;
	}

	override void DoEffect ()
	{
		if (Owner.player != NULL) Owner.player.mo.ResetAirSupply();
	}
}

class RandomArmorSpawner : RandomSpawner
{
	override Name ChooseSpawn()
	{
		if (AetheriusPlayerPawn.IsItemForbiddenToAll('GreenArmorDS'))
			return 'None';
		else
		{
			bool ga = (random() & 255) <= 8;
			bool gan = (random() & 255) <= 8;
			
			switch (random(0, 4))
			{
				case 0: return 'GreenArmorDS';
				case 1: return 'BlueArmorDS';
				case 2: return ga? (gan? 'None' : 'StoneSkinGA') : 'StoneSkin';
				case 3: return ga? (gan? 'None' : 'DiamondSkinGA') : 'DiamondSkin';
				default /*case 4*/: return 'ArmorBonusCluster64';
			}
		}
	}
}

class ArmorBonusCluster64 : Actor
{
	override void PostBeginPlay()
	{
		for (let i = 0; i < 64; i++)
			A_SpawnItemEx('ArmorBonus',0,0,0,random(-8,8),random(-8,8),random(-8,8),0,0,8);
		Destroy();
	}
}
