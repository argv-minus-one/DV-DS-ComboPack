
// Resistance code [w/ some help from argv :V]
class Resistances : Inventory 
{
	override void AbsorbDamage(int damage, Name damageType, out int newdamage) 
	{
		double resist = 0;
		double resistN = 0;
        
		for (let inv = Owner.Inv; inv != NULL; inv = inv.Inv)
				if (inv is "ResistanceGrantingItem")
						resist += ResistanceGrantingItem(inv).GetResistForDamageType(damageType);        
		newdamage = damage * (1. - resist);

		int newdmg1 = newdamage;
			for (let inv = Owner.Inv; inv != NULL; inv = inv.Inv)
					if (inv is "ResistanceGrantingItem")
							resistN += ResistanceGrantingItem(inv).ResistNormal;
		newdamage = newdmg1 * (1. - resistN);

		if (GetCVar("dvdsdebug_playerdmgdisplays") > 0) Console.Printf("(FloraArmorAbsorb:  DmgType = %s, dmg = %d, res = %.4f, newdmg1 = %d, resN = %.4f, finaldmg = %d)", damageType, damage, resist, newdmg1, resistN, newdamage);
	}

	States
	{
		Use:
			TNT1 A 0;
			Stop;
	}
}

class ResistanceGrantingItem : CustomInventory 
{
	double ResistNormal, ResistPhysical, ResistMelee, ResistBullet, ResistMagic;
	double ResistFire, ResistIce, ResistThunder, ResistHoly, ResistDark, ResistWind, ResistEarth;
	double ResistSlime, ResistMagma, ResistCrush, ResistDrowning, ResistFalling, ResistExplosive;
	double ResistSceptre, ResistFist, ResistKick, ResistGauntlets, ResistChainsaw;
	double ResistAcid, ResistPoison;

	property ResistNormal: ResistNormal;
	property ResistPhysical: ResistPhysical;
	property ResistMelee: ResistMelee;
	property ResistBullet: ResistBullet;
	property ResistMagic: ResistMagic;

	property ResistFire: ResistFire;
	property ResistIce: ResistIce;
	property ResistThunder: ResistThunder;
	property ResistHoly: ResistHoly;
	property ResistDark: ResistDark;
	property ResistWind: ResistWind;
	property ResistEarth: ResistEarth;

	property ResistSlime: ResistSlime;
	property ResistMagma: ResistMagma;
	property ResistCrush: ResistCrush;
	property ResistDrowning: ResistDrowning;
	property ResistFalling: ResistFalling;
	property ResistExplosive: ResistExplosive;

	property ResistSceptre: ResistSceptre;
	property ResistFist: ResistFist;
	property ResistKick: ResistKick;
	property ResistGauntlets: ResistGauntlets;
	property ResistChainsaw: ResistChainsaw;

	property ResistAcid: ResistAcid;
	property ResistPoison: ResistPoison;
    
	double GetResistForDamageType(Name damageType) 
	{
		if (damageType == 'Physical')
				return ResistPhysical;
		else if (damageType == 'Melee')
				return ResistMelee;
		else if (damageType == 'Bullet' || damageType == 'Railgun')
				return ResistBullet;
		else if (damageType == 'Magic')
				return ResistMagic;
		else if (damageType == 'Fire' || damageType == 'Lava')
				return ResistFire;
		else if (damageType == 'Ice')
				return ResistIce;
		else if (damageType == 'Thunder' || damageType == 'Electric' || damageType == 'Shock')
				return ResistThunder;
		else if (damageType == 'Holy')
				return ResistHoly;
		else if (damageType == 'Dark')
				return ResistDark;
		else if (damageType == 'Wind')
				return ResistWind;
		else if (damageType == 'Earth')
				return ResistEarth;
		else if (damageType == 'Slime')
				return ResistSlime;
		else if (damageType == 'Magma')
				return ResistMagma;
		else if (damageType == 'Crush')
				return ResistCrush;
		else if (damageType == 'Drowning')
				return ResistDrowning;
		else if (damageType == 'Falling')
				return ResistFalling;
		else if (damageType == 'Explosive' || damagetype == 'MOD_ROCKET' || damagetype == 'MOD_R_SPLASH' || damagetype == 'MOD_BARREL')
				return ResistExplosive;
		else if (damageType == 'Sceptre')
				return ResistSceptre;
		else if (damageType == 'Fist;')
				return ResistFist;
		else if (damageType == 'Kick')
				return ResistKick;
		else if (damageType == 'Gauntlets')
				return ResistGauntlets;
		else if (damageType == 'Chainsaw')
				return ResistChainsaw;
		else if (damageType == 'Acid')
				return ResistChainsaw;
		else if (damageType == 'Poison' || damageType == 'PoisonElemental')
				return ResistPoison;
		else
				return 0;
	}

	States
	{
		Use:
			TNT1 A 0;
			Stop;
	}
}

class BaseFloraArmorItemZSC : ResistanceGrantingItem
{
	int loopernum;
	default
	{
		radius 20;
		height 20;
		scale 0.33;
		//Alpha 0.1 RenderStyle Add
		mass 666;
		+DONTGIB;
		+FLOATBOB;
		+INVENTORY.ALWAYSPICKUP;
		+INVENTORY.BIGPOWERUP;
	}
	property loopernum: loopernum;

	override void PostBeginPlay()
	{
		if (CountInv("PlayingDoom64",AAPTR_PLAYER1)) { scale.x * 1.2; scale.y * 1.2; }
		//This space for rent.
		Super.PostBeginPlay();
	}

	override void Tick() 
	{ 
		if (Owner == null)
		{
			ACS_NamedExecuteAlways("CheckFloraArmorCopies",0,loopernum,0,0);
			if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("ArmorGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64); } }
			if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") <= 1) { A_SpawnItemEx("ArmorGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,128); } }
			if (A_CheckRange(1024,"Null")) { } else { if (GetCVar("dvds_gfxeffectlevel") <= 2) { A_SpawnItemEx("ArmorGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,192); } }
			A_GiveInventory("ActorVar1",1);
			if (CountInv("ActorVar1") >= 42)
			{
				A_Stopsound(CHAN_ITEM);
				A_Playsound("FloraArmor/Hum",CHAN_ITEM);
				A_SetInventory("ActorVar1",0);
			}
		}
		Super.Tick(); 
	}

	States
	{
		Spawn:
			FAMR A 0 bright NoDelay;
			loop;
		Use:
			TNT1 A 0;
			Stop;
		Pickup:
			// Other Things
			TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckPlayerIfDead") == 1,2);
			TNT1 A 0 A_PlaySound("generalequip", 5);
			TNT1 A 0;
			Stop;
	}
}

// Item 1
class SafeTeaShoes : BaseFloraArmorItemZSC
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRA0"
		inventory.icon "FAMRA0";
		Inventory.PickupMessage "Got the \chSafe Tea Shoes\c-!!";
		ResistanceGrantingItem.ResistSlime 0.275;
		ResistanceGrantingItem.ResistMagma 0.275;
		ResistanceGrantingItem.ResistNormal 0.03;
		ResistanceGrantingItem.ResistMagic 0.0125;
		BaseFloraArmorItemZSC.loopernum 1;
	}

	override void Tick() 
	{ 
		ResistSlime = frandom(0.25, 0.3); 
		Super.Tick(); 
	}

	States
	{
		Spawn:
			FAMR A 1 bright NoDelay;
			loop;
	}
}

// Item 2
class PearlyCorset : BaseFloraArmorItemZSC
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRB0"
		inventory.icon "FAMRB0";
		Inventory.PickupMessage "Got the \chPearly Corset\c-!!";
		ResistanceGrantingItem.ResistNormal 0.07;
		ResistanceGrantingItem.ResistFire 0.02;
		ResistanceGrantingItem.ResistMagma 0.02;
		ResistanceGrantingItem.ResistIce 0.02;
		ResistanceGrantingItem.ResistThunder 0.02;
		ResistanceGrantingItem.ResistDark 0.25;
		ResistanceGrantingItem.ResistMagic 0.025;
		ResistanceGrantingItem.ResistBullet 0.25;
		BaseFloraArmorItemZSC.loopernum 2;
	}

	States
	{
		Spawn:
			FAMR B 1 bright NoDelay;
			loop;
	}
}

// Item 3
class WaterFlyingDress : BaseFloraArmorItemZSC 
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRC0"
		inventory.icon "FAMRC0";
		Inventory.PickupMessage "Got the \chWater Flying Dress\c-!!";
		ResistanceGrantingItem.ResistNormal 0.08;
		ResistanceGrantingItem.ResistFire 0.3;
		ResistanceGrantingItem.ResistMagma 0.3;
		ResistanceGrantingItem.ResistMagic 0.25;
		ResistanceGrantingItem.ResistBullet 0.15;
		ResistanceGrantingItem.ResistExplosive 0.20;
		BaseFloraArmorItemZSC.loopernum 3;
	}

	States
	{
		Spawn:
			FAMR C 1 bright NoDelay;
			loop;
	}
}

// Item 4
class EvenstarNecklace : BaseFloraArmorItemZSC 
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRD0"
		inventory.icon "FAMRD0";
		Inventory.PickupMessage "Got the \chEvenstar Necklace\c-!!";
		ResistanceGrantingItem.ResistNormal 0.02;
		ResistanceGrantingItem.ResistFire 0.2;
		ResistanceGrantingItem.ResistMagma 0.2;
		ResistanceGrantingItem.ResistIce 0.2;
		ResistanceGrantingItem.ResistThunder 0.2;
		ResistanceGrantingItem.ResistDark 0.2;
		ResistanceGrantingItem.ResistMagic 0.2;
		BaseFloraArmorItemZSC.loopernum 4;
	}

	States
	{
		Spawn:
			FAMR D 1 bright NoDelay;
			loop;
	}
}

// Item 5
class CloakOfEvasion : BaseFloraArmorItemZSC 
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRE0"
		inventory.icon "FAMRE0";
		Inventory.PickupMessage "Got the \chCloak of Evasion\c-!!";
		ResistanceGrantingItem.ResistNormal 0.04;
		ResistanceGrantingItem.ResistIce 0.05;
		ResistanceGrantingItem.ResistThunder 0.025;
		ResistanceGrantingItem.ResistBullet 0.1;
		BaseFloraArmorItemZSC.loopernum 5;
	}

	States
	{
		Spawn:
			FAMR E 1 bright NoDelay;
			loop;
	}
}

// Item 6
class AnubisCufflinks : BaseFloraArmorItemZSC 
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRF0"
		inventory.icon "FAMRF0";
		Inventory.PickupMessage "Got the \chAnubis Cufflinks\c-!!";
		ResistanceGrantingItem.ResistNormal 0.05;
		ResistanceGrantingItem.ResistThunder 0.0625;
		ResistanceGrantingItem.ResistBullet 0.1;
		BaseFloraArmorItemZSC.loopernum 6;
	}

	States
	{
		Spawn:
			FAMR F 1 bright NoDelay;
			loop;
	}
}

// Item 7
class KissaBra : BaseFloraArmorItemZSC 
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRG0"
		inventory.icon "FAMRG0";
		Inventory.PickupMessage "Got \chKissa's Armored Brasseire\c-!!";
		ResistanceGrantingItem.ResistNormal 0.06;
		ResistanceGrantingItem.ResistBullet 0.2;
		BaseFloraArmorItemZSC.loopernum 7;
	}

	States
	{
	Spawn:
		FAMR G 1 bright NoDelay;
		loop;
	}
}

// Item 8
class DivineShield : BaseFloraArmorItemZSC 
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRH0"
		inventory.icon "FAMRH0";
		Inventory.PickupMessage "Got the \chDivine Shield\c-!!";
		ResistanceGrantingItem.ResistNormal 0.16;
		ResistanceGrantingItem.ResistFire 0.25;
		ResistanceGrantingItem.ResistMagma 0.25;
		ResistanceGrantingItem.ResistIce 0.25;
		ResistanceGrantingItem.ResistThunder 0.25;
		ResistanceGrantingItem.ResistDark 0.25;
		ResistanceGrantingItem.ResistMagic 0.3;
		BaseFloraArmorItemZSC.loopernum 9;
	}

	States
	{
		Spawn:
			FAMR H 1 bright NoDelay;
			loop;
	}
}

// Item 9
class BalrogRing : BaseFloraArmorItemZSC 
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRI0"
		inventory.icon "FAMRI0";
		Inventory.PickupMessage "Got the \chBalrog's Ring\c-!!";
		ResistanceGrantingItem.ResistNormal 0.02;
		ResistanceGrantingItem.ResistFire 0.15;
		ResistanceGrantingItem.ResistMagma 0.15;
		ResistanceGrantingItem.ResistIce 0.225;
		ResistanceGrantingItem.ResistExplosive 0.25;
		BaseFloraArmorItemZSC.loopernum 10;
	}

	States
	{
		Spawn:
			FAMR I 1 bright NoDelay;
			loop;
	}
}

// Item 10
class DoveRibbon : BaseFloraArmorItemZSC 
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRJ0"
		inventory.icon "FAMRJ0";
		Inventory.PickupMessage "Got the \chDove's Ribbon\c-!!";
		ResistanceGrantingItem.ResistNormal 0.09;
		ResistanceGrantingItem.ResistFire 0.0125;
		ResistanceGrantingItem.ResistMagma 0.0125;
		ResistanceGrantingItem.ResistIce 0.0625;
		ResistanceGrantingItem.ResistThunder 0.15;
		ResistanceGrantingItem.ResistDark 0.125;
		ResistanceGrantingItem.ResistMagic 0.0625;
		ResistanceGrantingItem.ResistBullet 0.05;
		BaseFloraArmorItemZSC.loopernum 11;
	}

	States
	{
		Spawn:
			FAMR J 1 bright NoDelay;
			loop;
	}
}

// Item 11
class FalconKnifeEarrings : BaseFloraArmorItemZSC 
{
	default
	{
		//$Category DV-DS Armor Items
		//$Sprite "FAMRK0"
		inventory.icon "FAMRK0";
		Inventory.PickupMessage "Got the \chFalcon Knife Earrings\c-!!";
		ResistanceGrantingItem.ResistNormal 0.05;
		BaseFloraArmorItemZSC.loopernum 12;
	}

	States
	{
		Spawn:
			FAMR K 1 bright NoDelay;
			loop;
	}
}